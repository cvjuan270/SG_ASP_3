@model SG_ASP_3.Models.MedicinaViewModel

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="">
    <h5>Atenciones</h5>
    <hr />
    <div>
        <dl class="row">

            <dt class="col-sm-3 text-right">Documento de identidad</dt>
            <dd class="col-sm-9 text-left">@Html.DisplayText("DocIde")</dd>

            <dt class="col-sm-3 text-right">Nombre y apellido</dt>
            <dd class="col-sm-9 text-left">@Html.DisplayText("NomApe")</dd>

            <dt class="col-sm-3 text-right">Empresa</dt>
            <dd class="col-sm-9 text-left">@Html.DisplayText("Empres")</dd>
        </dl>
    </div>

    <h4>Medicina</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group row">
        @Html.LabelFor(model => model.oMedicina.IdAtenciones, "IdAtenciones", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
        <div class="col-md-10">
            @Html.Editor("IdAtenciones", new { htmlAttributes = new { @readonly = "readonly", @class = "form-control " } })
            @Html.ValidationMessageFor(model => model.oMedicina.IdAtenciones, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.oMedicina.IdMedico, "IdMedico", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
        <div class="col-md-10">
            @Html.DropDownList("IdMedico", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.oMedicina.IdMedico, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.oMedicina.HorIng, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.oMedicina.HorIng, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", @Type = "time" } })
            @Html.ValidationMessageFor(model => model.oMedicina.HorIng, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.oMedicina.HorSal, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.oMedicina.HorSal, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", @Type = "time" } })
            @Html.ValidationMessageFor(model => model.oMedicina.HorSal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.oMedicina.IdApti, "IdApti", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
        <div class="col-md-10">
            @Html.DropDownList("IdApti", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.oMedicina.IdApti, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.oMedicina.FecApt, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.oMedicina.FecApt, new { htmlAttributes = new { @class = "form-control", @Type = "date" } })
            @Html.ValidationMessageFor(model => model.oMedicina.FecApt, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.oMedicina.FecEnv, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.oMedicina.FecEnv, new { htmlAttributes = new { @class = "form-control", @Type = "date" } })
            @Html.ValidationMessageFor(model => model.oMedicina.FecEnv, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.oMedicina.Coment, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.oMedicina.Coment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.oMedicina.Coment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.oMedicina.Observ, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.oMedicina.Observ, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.oMedicina.Observ, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr />
    <div class="form-group row">

        <label class="col-sm-2 col-form-label">Interconsulta</label>
        <div class="col-md-10">
            <div class="form-inline">
                <input type="text" id="Descri" class="form-control" />
                <input type="button" value="Agregar" onclick="AgregaInterconsulta(); return false;" class="btn" />
            </div>
        </div>

    </div>
    <div id="divInterconsultas" class="form-group row">
        <table id="tableInterconsultas" class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th scope="col">Interconsultas</th>
                </tr>
            </thead>
        </table>
    </div>

</div>

    @*------INTERCONSULTA-------*@


    <div class="form-group row">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var num = 0;
        function AgregaInterconsulta() {
            //captura datos
            let IntCon = document.getElementById("Descri").value;

            //agrega tabla
            let Tabla = document.getElementById("tableInterconsultas");
            let TR = document.createElement("tr");
            let TDInterconsulta = document.createElement("td");

            TR.appendChild(TDInterconsulta);
            TDInterconsulta.innerHTML = IntCon;

            Tabla.appendChild(TR);

            //agregamos hiden
            let divInterconsultas = document.getElementById("divInterconsultas");
            let HiddenIndex = document.createElement("input");
            let HiddenInterconsulta = document.createElement("input");

            HiddenIndex.name = "oInterconsulta.Index"
            HiddenIndex.value = num;
            HiddenIndex.type = "hidden";
            HiddenInterconsulta.name = "oInterconsulta[" + num + "].Descri";
            HiddenInterconsulta.value = IntCon;
            HiddenInterconsulta.type = "hidden";

            divInterconsultas.appendChild(HiddenIndex);
            divInterconsultas.appendChild(HiddenInterconsulta);

            document.getElementById("Descri").value = "";

            num++;
        }
    </script>
}
